swagger: '2.0'
info:
  description: |
    The Course API by ScottyLabs online.

    ScottyLabs offers the Course API that provides information about CMU courses.
    The documentation can be found [here](https://github.com/ScottyLabs/course-api).
    This is its RESTful version.
  version: "v1"
  title: Course API Online

host: api.cmucoursefind.xyz
basePath: /course/v1

tags:
- name: course
  description: Course information

paths:
  /course/{courseId}/:
    get:
      tags:
      - course
      summary: Course info by course number
      operationId: findCourseByCourseId
      produces:
      - application/json
      parameters:
      - name: courseId
        in: path
        description: Course ID
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              course:
                $ref: '#/definitions/Course'
        404:
          description: Course not found
          schema:
            type: object
            $ref: '#/definitions/ErrorMessage'

  /course/{courseId}/term/{term}/:
    get:
      tags:
      - course
      summary: Course info by course number in a term
      operationId: findCourseByCourseIdAndTerm
      produces:
      - application/json
      parameters:
      - name: courseId
        in: path
        description: Course ID
        required: true
        type: string
      - name: term
        in: path
        description: "Term, e.g. f17 for Fall 2017"
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: object
            properties:
              course:
                $ref: '#/definitions/Course'
        404:
          description: Course not found
          schema:
            type: object
            $ref: '#/definitions/ErrorMessage'

  /instructor/{name}/:
    get:
      tags:
      - course
      summary: Course info by instructor
      operationId: findCoursesByInstructor
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        description: Name of the instructor
        required: true
        type: string
      - name: fuzzy
        in: query
        description: Fuzzy search
        required: false
        type: boolean
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'
  
  /instructor/{name}/term/{term}:
    get:
      tags:
      - course
      summary: Course info by instructor
      operationId: findCoursesByInstructorAndTerm
      produces:
      - application/json
      parameters:
      - name: name
        in: path
        description: Name of the instructor
        required: true
        type: string
      - name: term
        in: path
        description: "Term, e.g. f17 for Fall 2017"
        required: true
        type: string
      - name: fuzzy
        in: query
        description: Fuzzy search
        required: false
        type: boolean
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

  /datetime/{datetime}/:
    get:
      tags:
      - course
      summary: Classes happening at given time.
      operationId: findCoursesByDatetime
      produces:
      - application/json
      parameters:
      - name: datetime
        in: path
        description: Should be in the format defined by ISO-8601.
        required: true
        type: string
        format: date-time
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

  /datetime/{datetime}/span/{span}/:
    get:
      tags:
      - course
      summary: Courses that start/happen within a span of time, starting from datetime
      operationId: findCoursesByDatetimeAndSpan
      produces:
      - application/json
      parameters:
      - name: datetime
        in: path
        description: "Should be in the format defined by ISO-8601."
        required: true
        type: string
        format: date-time
      - name: span
        in: path
        description: Time span, in minutes, no more than 120 minutes.
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

  /building/{building}/term/{term}/:
    get:
      tags:
      - course
      summary: Courses in a building
      operationId: findCoursesByBuildingAndTerm
      produces:
      - application/json
      parameters:
      - name: building
        in: path
        description: the abbreviation of the building, for example, DH for Doherty
          Hall, GHC for Gates and Hillman Centers. The legend can be found on 
          [http://www.cmu.edu/hub/legend.html](http://www.cmu.edu/hub/legend.html)
        required: true
        type: string
      - name: term
        in: path
        description: "Term, e.g. f17 for Fall 2017"
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

  /room/{room}/term/{term}/:
    get:
      tags:
      - course
      summary: Courses in a room
      operationId: findCoursesByRoomAndTerm
      produces:
      - application/json
      parameters:
      - name: room
        in: path
        description: You can also get courses by the room number without know 
          which building it is in. This is handy when you just have the room number.
        required: true
        type: string
      - name: term
        in: path
        description: "Term, e.g. f17 for Fall 2017"
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

  /building/{building}/room/{room}/:
    get:
      tags:
      - course
      summary: Courses in building, room
      operationId: findCoursesByBuildingAndRoom
      produces:
      - application/json
      parameters:
      - name: building
        in: path
        description: Building
        required: true
        type: string
      - name: room
        in: path
        description: Room
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Course'

definitions:
  Course:
    type: object
    required:
      - id
      - name
      - prereqs
      - prereqs_obj
      - coreqs
      - coreqs_obj
      - department
      - desc
      - lectures
      - sections
      - units
    properties:
      id:
        type: string
        example: 21-259
      name:
        type: string
        example: Calculus in Three Dimensions
      prereqs:
        type: string
        example: 21-122
      prereqs_obj:
        $ref: '#/definitions/Req'
      coreqs:
        type: string
        example: null
      coreqs_obj:
        $ref: '#/definitions/Req'
      department:
        type: string
        example: Mathematical Sciences
      desc:
        type: string
        example: "Vectors, lines, planes, quadratic surfaces, polar, cylindrical and spherical coordinates, partial derivatives, directional derivatives, gradient, divergence, curl, chain rule, maximum-minimum problems, multiple integrals, parametric surfaces and curves, line integrals, surface integrals, Green-Gauss theorems. 3 hrs. lec., 1 hr. rec."
      lectures:
          type: array
          items:
              $ref: '#/definitions/Meeting'
      sections:
          type: array
          items:
              $ref: '#/definitions/Meeting'
      semester:
        type: string
        example: Fall 2016
      units:
        type: number
        format: float
        example: 9.0
      rundate:
        type: string
        format: "yyyy-MM-dd"
        example: "2016-09-10"

  Meeting:
    type: object
    required:
    - instructors
    - name
    - times
    properties:
      instructors:
        type: array
        items:
          type: string
        example: ['Flaherty, Timothy']
      name:
        type: string
        example: Lec 1
      times:
        type: array
        items:
          $ref: '#/definitions/TimeObj'

  TimeObj:
    type: object
    required:
    - days
    - begin
    - end
    - location
    - building
    - room
    properties:
      days:
        type: array
        items:
          type: integer
        example: [1, 3, 5]
      begin:
        type: string
        format: hh:mma
        example: 09:30AM
      end:
        type: string
        format: hh:mma
        example: 10:20AM
      location:
        type: string
        example: Pittsburgh, Pennsylvania
      room:
        type: string
        example: 7500
      building:
        type: string
        example: WEH

  Req:
    type: object
    required:
    - invert
    - reqs_list
    properties:
      invert:
        type: boolean
        example: false
      reqs_list:
        type: array
        items:
          type: string
        example: ["21-122"]

  ErrorMessage:
    type: object
    properties:
      status:
        type: integer
        example: 404
      error:
        type: object
        properties:
          message:
            type: string
        example:
          message: Error Message
